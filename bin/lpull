#!/usr/bin/env lua5.3
--- Command line utility to update projects hosted on GitHub
-- Inspired by Ohmyzsh updater

local colors = require 'ansicolors'
local lsh = require 'lsh'
unpack = table.unpack
require 'strong'

-- [[ LOCAL FUNCTIONS ]]

local println = function(text)
	print(colors(text:gsub("${", "%%{")))
end

-- [[ THE SCRIPT ITSELF ]]

local old_commit = lsh('git rev-parse HEAD', true)

print 'Checking for updates...'
if not select(2, lsh 'git pull origin master') then
	print 'Can not pull upgrades.'
	return
end

local new_commit = lsh('git rev-parse HEAD', true)
print(old_commit:sub(1, 7), "->", new_commit:sub(1, 7))

if old_commit == new_commit then
	print 'It is already up-to-date.'
	return
end

local new_commits = lsh('git log --oneline %s...%s' % {old_commit, new_commit}, true) / '\n'
local changes = {}

for i = #new_commits, 1, -1 do
	local commit = new_commits[i]
	
	local name, category = table.unpack(commit / '@')

	category = category or "other"
	if changes[category] == nil then
		changes[category] = {}
	end

	table.insert(changes[category], name)
end

for category, collection in pairs(changes) do
	println('\n${bright}%s:${reset}\n' % category:capitalize())
	for _, change in pairs(collection) do
		local id = change:sub(1, 7)
		local text = change:sub(9)
		
		println("- ${yellow}%s${reset}\t%s" % {id, text})
	end
end
